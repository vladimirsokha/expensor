@use 'vars';
$breakpoints: (
  "sm": vars.$sm,
  "md": vars.$md,
  "lg": vars.$lg,
  "xl": vars.$xl,
  "xxl": vars.$xxl
);

@mixin up($b) {
  @if map-has-key($breakpoints, $b) {
    $v: map-get($breakpoints, $b);

    @media (min-width: $v) {
      @content;
    }
  }
}

@mixin down($b) {
  @if map-has-key($breakpoints, $b) {
    $v: map-get($breakpoints, $b);

    @media (max-width: $v) {
      @content;
    }
  }
}

@mixin flex-center($d: row) {
  display: flex;
  justify-content: center;
  align-items: center;

  @if ($d == column) {
    flex-direction: column;
  }
}

@mixin placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin scrollbar($scrollbar-width, $thumb-color, $track-color) {
  &::-webkit-scrollbar {
    width: #{$scrollbar-width} + px;
  }

  &::-webkit-scrollbar-track {
    background-color: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
  }

  // firefox
  & {
    @if ($scrollbar-width == 0) {
      scrollbar-width: none;
    } @else if ($scrollbar-width < 19) {
      scrollbar-width: thin;
    } @else {
      scrollbar-width: auto;
    }
    scrollbar-color: $thumb-color $track-color;
  }
}

@mixin fluid-fs($min-w, $max-w, $min-fs, $max-fs) {
  $u1: unit($min-w);
  $u2: unit($max-w);
  $u3: unit($min-fs);
  $u4: unit($max-fs);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-fs;

      @media (min-width: $min-w) {
        font-size: calc(
          #{$min-fs} + #{strip-unit($max-fs - $min-fs)} *
            ((100vw - #{$min-w}) / #{strip-unit($max-w - $min-w)})
        );
      }

      @media (min-width: $max-w) {
        font-size: $max-fs;
      }
    }
  }
}